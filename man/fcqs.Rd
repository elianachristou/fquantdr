% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcqs.R
\name{fcqs}
\alias{fcqs}
\title{Functional Central Quantile Subspace}
\usage{
fcqs(Xc, y, time_points, q, nbasis, tau, d_tau, H, d_DR)
}
\arguments{
\item{Xc}{An n x t x p array of functional data where n represents the
number of observations, t represents the number of time points, and p is the
number of functional predictors}

\item{y}{A vector representing the univariate response}

\item{time_points}{A vector of the time points spanned by the functional
predictors}

\item{q}{A number used to define the dimension during KL expansion}

\item{nbasis}{The number of basis functions for smoothing functional data}

\item{tau}{The quantile level, between 0 and 1, which we are calculating
the FCQS for}

\item{d_tau}{The dimension of the functional central quantile subspace (FCQS)}

\item{H}{The number of slices for functional sliced inverse regression}

\item{d_DR}{The dimension of the functional central subspace (FCS)}
}
\value{
The directions of the functional central quantile subspace, which can
be used to sufficiently reduce the dimension of the functional predictors for
quantile regression
}
\description{
\code{fcqs} estimates the directions of the functional central quantile
subspace, extending the central quantile subspace to functional data.
}
\details{
This function computes the directions that span the \eqn{\tau}th functional
central quantile subspace. These directions represent functions that can
be linearly applied via the inner product to given predictors to reduce the
dimension of infinitely-dimensional functional data without losing any
information required for accurate quantile regression of the functional
data.
}
\examples{
# Parameters for generating functional data
n <- 100
p <- 5
q <- 4
time_points <- seq(0, 1, length.out = 101)
eta <- matrix(stats::rnorm(n * p * q), nrow = n, ncol = p * q)

# Generate functional data
result <- fundata(n, p, q, time_points, eta)

# Centered functional predictors
Xc <- result$xc

# Further parameters for FCQS
H <- 10
tau <- 0.1
K <- 1
d_tau <- 1
nbasis <- q
d_DR <- 1
P <- eigen(cov(eta))$vectors
Q <- diag(eigen(cov(eta))$values)
# This is the inner products <b1, X>, <b2, X>, ...
mfpca.scores <- eta \%*\% P
# Define true inner products for functional central subspace
uu_fcs <- mfpca.scores[, 1:K]
# Generate error for data
error <- rnorm(n)
# Generate response from functional data and error
y <- 3 * mfpca.scores[, 1] + error
# Run FCQS function
fcqs(Xc, y, time_points, q, nbasis, tau, d_tau, H, d_DR)
}
